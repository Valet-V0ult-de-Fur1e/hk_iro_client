{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EGOR\\\\Desktop\\\\Work_system\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\hk_iro_server\\\\front-hk-iro\\\\src\\\\Test.js\";\nimport React from 'react';\nimport './App.css';\nimport './SimpleChatbot-1.3.2/chatbot/chatbot.css';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBot from 'react-simple-chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  id: \"Greet\",\n  message: props.data,\n  trigger: \"Ask Name\"\n}, {\n  id: \"Ask Name\",\n  message: \"Please type your name?\",\n  trigger: \"Waiting user input for name\"\n}, {\n  id: \"Waiting user input for name\",\n  user: true,\n  //trigger: \"Asking options to eat\"\n  trigger: input => {\n    props.eventHandler(input.value);\n    return \"Asking options to eat\";\n  }\n}, {\n  id: \"Asking options to eat\",\n  message: \"Hi {previousValue}, Please click on what you want to buy...?\",\n  trigger: \"Displaying options to eat\"\n}, {\n  id: \"Displaying options to eat\",\n  options: [{\n    value: \"pizza\",\n    label: \"Jeans\",\n    trigger: \"Asking for Tomatoes in Pizza\"\n  }, {\n    value: \"burger\",\n    label: \"Jacket\",\n    trigger: \"Burger Not available\"\n  }]\n}, {\n  id: \"Burger Not available\",\n  message: \"Sorry, We don't have burger available at the moment. Would you like to try our pizza?\",\n  trigger: \"Asking for pizza after burger\"\n}, {\n  id: \"Asking for pizza after burger\",\n  options: [{\n    value: true,\n    label: \"Yes\",\n    trigger: \"Asking for Tomatoes in Pizza\"\n  }, {\n    value: \"false\",\n    label: \"No\",\n    trigger: \"Done\"\n  }]\n}];\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white'\n}; // Set some properties of the bot\n\nconst config = {\n  floating: true\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ChatBot, {\n        headerTitle: \"GeekBot\",\n        steps: steps,\n        ...config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ThemeProvider","ChatBot","steps","id","message","props","data","trigger","user","input","eventHandler","value","options","label","theme","background","headerBgColor","headerFontSize","botBubbleColor","headerFontColor","botFontColor","userBubbleColor","userFontColor","config","floating","App"],"sources":["C:/Users/EGOR/Desktop/Work_system/работа/проекты/hk_iro_server/front-hk-iro/src/Test.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport './SimpleChatbot-1.3.2/chatbot/chatbot.css'\r\nimport { ThemeProvider } from 'styled-components';\r\nimport ChatBot from 'react-simple-chatbot';\r\n \r\nconst steps = [{\r\n    id: \"Greet\",\r\n    message: props.data,\r\n    trigger: \"Ask Name\"\r\n  },\r\n  {\r\n    id: \"Ask Name\",\r\n    message: \"Please type your name?\",\r\n    trigger: \"Waiting user input for name\"\r\n  },\r\n  {\r\n    id: \"Waiting user input for name\",\r\n    user: true,\r\n    //trigger: \"Asking options to eat\"\r\n    trigger: (input) => {\r\n      props.eventHandler(input.value);\r\n      return \"Asking options to eat\"\r\n    }\r\n  },\r\n  {\r\n    id: \"Asking options to eat\",\r\n    message: \"Hi {previousValue}, Please click on what you want to buy...?\",\r\n    trigger: \"Displaying options to eat\"\r\n  },\r\n  {\r\n    id: \"Displaying options to eat\",\r\n    options: [{\r\n        value: \"pizza\",\r\n        label: \"Jeans\",\r\n        trigger: \"Asking for Tomatoes in Pizza\"\r\n      },\r\n      {\r\n        value: \"burger\",\r\n        label: \"Jacket\",\r\n        trigger: \"Burger Not available\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: \"Burger Not available\",\r\n    message: \"Sorry, We don't have burger available at the moment. Would you like to try our pizza?\",\r\n    trigger: \"Asking for pizza after burger\"\r\n  },\r\n  {\r\n    id: \"Asking for pizza after burger\",\r\n    options: [{\r\n        value: true,\r\n        label: \"Yes\",\r\n        trigger: \"Asking for Tomatoes in Pizza\"\r\n      },\r\n      {\r\n        value: \"false\",\r\n        label: \"No\",\r\n        trigger: \"Done\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst theme = {\r\n    background: '#C9FF8F',\r\n    headerBgColor: '#197B22',\r\n    headerFontSize: '20px',\r\n    botBubbleColor: '#0F3789',\r\n    headerFontColor: 'white',\r\n    botFontColor: 'white',\r\n    userBubbleColor: '#FF5733',\r\n    userFontColor: 'white',\r\n};\r\n \r\n// Set some properties of the bot\r\nconst config = {\r\n    floating: true,\r\n};\r\n\r\nfunction App (){\r\n    return (\r\n        <div className=\"App\">\r\n            <ThemeProvider theme={theme}>\r\n                <ChatBot\r\n                    headerTitle=\"GeekBot\"\r\n                    steps={steps}\r\n                    {...config}\r\n                />\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,2CAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;EACXC,EAAE,EAAE,OADO;EAEXC,OAAO,EAAEC,KAAK,CAACC,IAFJ;EAGXC,OAAO,EAAE;AAHE,CAAD,EAKZ;EACEJ,EAAE,EAAE,UADN;EAEEC,OAAO,EAAE,wBAFX;EAGEG,OAAO,EAAE;AAHX,CALY,EAUZ;EACEJ,EAAE,EAAE,6BADN;EAEEK,IAAI,EAAE,IAFR;EAGE;EACAD,OAAO,EAAGE,KAAD,IAAW;IAClBJ,KAAK,CAACK,YAAN,CAAmBD,KAAK,CAACE,KAAzB;IACA,OAAO,uBAAP;EACD;AAPH,CAVY,EAmBZ;EACER,EAAE,EAAE,uBADN;EAEEC,OAAO,EAAE,8DAFX;EAGEG,OAAO,EAAE;AAHX,CAnBY,EAwBZ;EACEJ,EAAE,EAAE,2BADN;EAEES,OAAO,EAAE,CAAC;IACND,KAAK,EAAE,OADD;IAENE,KAAK,EAAE,OAFD;IAGNN,OAAO,EAAE;EAHH,CAAD,EAKP;IACEI,KAAK,EAAE,QADT;IAEEE,KAAK,EAAE,QAFT;IAGEN,OAAO,EAAE;EAHX,CALO;AAFX,CAxBY,EAsCZ;EACEJ,EAAE,EAAE,sBADN;EAEEC,OAAO,EAAE,uFAFX;EAGEG,OAAO,EAAE;AAHX,CAtCY,EA2CZ;EACEJ,EAAE,EAAE,+BADN;EAEES,OAAO,EAAE,CAAC;IACND,KAAK,EAAE,IADD;IAENE,KAAK,EAAE,KAFD;IAGNN,OAAO,EAAE;EAHH,CAAD,EAKP;IACEI,KAAK,EAAE,OADT;IAEEE,KAAK,EAAE,IAFT;IAGEN,OAAO,EAAE;EAHX,CALO;AAFX,CA3CY,CAAd;AA2DA,MAAMO,KAAK,GAAG;EACVC,UAAU,EAAE,SADF;EAEVC,aAAa,EAAE,SAFL;EAGVC,cAAc,EAAE,MAHN;EAIVC,cAAc,EAAE,SAJN;EAKVC,eAAe,EAAE,OALP;EAMVC,YAAY,EAAE,OANJ;EAOVC,eAAe,EAAE,SAPP;EAQVC,aAAa,EAAE;AARL,CAAd,C,CAWA;;AACA,MAAMC,MAAM,GAAG;EACXC,QAAQ,EAAE;AADC,CAAf;;AAIA,SAASC,GAAT,GAAe;EACX,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI,QAAC,aAAD;MAAe,KAAK,EAAEX,KAAtB;MAAA,uBACI,QAAC,OAAD;QACI,WAAW,EAAC,SADhB;QAEI,KAAK,EAAEZ,KAFX;QAAA,GAGQqB;MAHR;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;KAZQE,G;AAYR;AAED,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}