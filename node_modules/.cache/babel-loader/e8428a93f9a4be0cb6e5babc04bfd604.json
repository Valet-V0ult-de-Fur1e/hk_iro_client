{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EGOR\\\\Desktop\\\\Work_system\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\hk_iro_server\\\\front-hk-iro\\\\src\\\\Test.js\";\nimport React from 'react';\nimport './App.css';\nimport './SimpleChatbot-1.3.2/chatbot/chatbot.css';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBot from 'react-simple-chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  id: '0',\n  message: 'Hey Geek!',\n  // This calls the next id\n  // i.e. id 1 in this case\n  trigger: '1'\n}, {\n  id: '1',\n  // This message appears in\n  // the bot chat bubble\n  message: 'Please write your username',\n  trigger: '2'\n}, {\n  id: '2',\n  // Here we want the user\n  // to enter input\n  user: true,\n  trigger: '3'\n}, {\n  id: '3',\n  message: \" hi {previousValue}, how can I help you?\",\n  trigger: 4\n}, {\n  id: '4',\n  options: [// When we need to show a number of\n  // options to choose we create alist\n  // like this\n  {\n    value: 1,\n    label: 'View Courses'\n  }, {\n    value: 2,\n    label: 'Read Articles'\n  }] // end: true\n\n}];\nconst theme = {\n  background: '#C9FF8F',\n  headerBgColor: '#197B22',\n  headerFontSize: '20px',\n  botBubbleColor: '#0F3789',\n  headerFontColor: 'white',\n  botFontColor: 'white',\n  userBubbleColor: '#FF5733',\n  userFontColor: 'white'\n}; // Set some properties of the bot\n\nconst config = {\n  floating: true\n};\n\nfunction Bot() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ChatBot, {\n        headerTitle: \"GeekBot\",\n        steps: steps,\n        ...config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Bot;\n;\nexport default Bot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bot\");","map":{"version":3,"names":["React","ThemeProvider","ChatBot","steps","id","message","trigger","user","options","value","label","theme","background","headerBgColor","headerFontSize","botBubbleColor","headerFontColor","botFontColor","userBubbleColor","userFontColor","config","floating","Bot"],"sources":["C:/Users/EGOR/Desktop/Work_system/работа/проекты/hk_iro_server/front-hk-iro/src/Test.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport './SimpleChatbot-1.3.2/chatbot/chatbot.css'\r\nimport { ThemeProvider } from 'styled-components';\r\nimport ChatBot from 'react-simple-chatbot';\r\n \r\nconst steps = [\r\n    {\r\n        id: '0',\r\n        message: 'Hey Geek!',\r\n \r\n        // This calls the next id\r\n        // i.e. id 1 in this case\r\n        trigger: '1',\r\n    }, {\r\n        id: '1',\r\n \r\n        // This message appears in\r\n        // the bot chat bubble\r\n        message: 'Please write your username',\r\n        trigger: '2'\r\n    }, {\r\n        id: '2',\r\n \r\n        // Here we want the user\r\n        // to enter input\r\n        user: true,\r\n        trigger: '3',\r\n    }, {\r\n        id: '3',\r\n        message: \" hi {previousValue}, how can I help you?\",\r\n        trigger: 4\r\n    }, {\r\n        id: '4',\r\n        options: [\r\n             \r\n            // When we need to show a number of\r\n            // options to choose we create alist\r\n            // like this\r\n            { value: 1, label: 'View Courses' },\r\n            { value: 2, label: 'Read Articles' },\r\n \r\n        ],\r\n        // end: true\r\n    }\r\n];\r\n\r\nconst theme = {\r\n    background: '#C9FF8F',\r\n    headerBgColor: '#197B22',\r\n    headerFontSize: '20px',\r\n    botBubbleColor: '#0F3789',\r\n    headerFontColor: 'white',\r\n    botFontColor: 'white',\r\n    userBubbleColor: '#FF5733',\r\n    userFontColor: 'white',\r\n};\r\n \r\n// Set some properties of the bot\r\nconst config = {\r\n    floating: true,\r\n};\r\n\r\nfunction Bot (){\r\n    return (\r\n        <div className=\"App\">\r\n            <ThemeProvider theme={theme}>\r\n                <ChatBot\r\n                    headerTitle=\"GeekBot\"\r\n                    steps={steps}\r\n                    {...config}\r\n                />\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Bot;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,2CAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,KAAK,GAAG,CACV;EACIC,EAAE,EAAE,GADR;EAEIC,OAAO,EAAE,WAFb;EAII;EACA;EACAC,OAAO,EAAE;AANb,CADU,EAQP;EACCF,EAAE,EAAE,GADL;EAGC;EACA;EACAC,OAAO,EAAE,4BALV;EAMCC,OAAO,EAAE;AANV,CARO,EAeP;EACCF,EAAE,EAAE,GADL;EAGC;EACA;EACAG,IAAI,EAAE,IALP;EAMCD,OAAO,EAAE;AANV,CAfO,EAsBP;EACCF,EAAE,EAAE,GADL;EAECC,OAAO,EAAE,0CAFV;EAGCC,OAAO,EAAE;AAHV,CAtBO,EA0BP;EACCF,EAAE,EAAE,GADL;EAECI,OAAO,EAAE,CAEL;EACA;EACA;EACA;IAAEC,KAAK,EAAE,CAAT;IAAYC,KAAK,EAAE;EAAnB,CALK,EAML;IAAED,KAAK,EAAE,CAAT;IAAYC,KAAK,EAAE;EAAnB,CANK,CAFV,CAWC;;AAXD,CA1BO,CAAd;AAyCA,MAAMC,KAAK,GAAG;EACVC,UAAU,EAAE,SADF;EAEVC,aAAa,EAAE,SAFL;EAGVC,cAAc,EAAE,MAHN;EAIVC,cAAc,EAAE,SAJN;EAKVC,eAAe,EAAE,OALP;EAMVC,YAAY,EAAE,OANJ;EAOVC,eAAe,EAAE,SAPP;EAQVC,aAAa,EAAE;AARL,CAAd,C,CAWA;;AACA,MAAMC,MAAM,GAAG;EACXC,QAAQ,EAAE;AADC,CAAf;;AAIA,SAASC,GAAT,GAAe;EACX,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI,QAAC,aAAD;MAAe,KAAK,EAAEX,KAAtB;MAAA,uBACI,QAAC,OAAD;QACI,WAAW,EAAC,SADhB;QAEI,KAAK,EAAER,KAFX;QAAA,GAGQiB;MAHR;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;KAZQE,G;AAYR;AAED,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}