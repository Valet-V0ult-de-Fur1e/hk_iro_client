{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EGOR\\\\Desktop\\\\Work_system\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\hk_iro_server\\\\front-hk-iro\\\\src\\\\Test.js\";\nimport React from 'react';\nimport './App.css';\nimport \"../SimpleChatbot-1.3.2/chatbot/chatbot.css\";\nimport \"../SimpleChatbot-1.3.2/chatbot/fp2\";\nimport \"../SimpleChatbot-1.3.2/chatbot/chatbot\";\nimport Fingerprint2 from \"../SimpleChatbot-1.3.2/chatbot/fp2\";\nimport SimpleChatbot from \"../SimpleChatbot-1.3.2/chatbot/chatbot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const configChatbot = {};\n  configChatbot.btn = '.chatbot__btn';\n  configChatbot.key = 'fingerprint';\n  configChatbot.replicas = '/data/data-1.json';\n  configChatbot.root = SimpleChatbot.createTemplate();\n  configChatbot.url = '/chatbot/chatbot.php';\n  let chatbot = null;\n  let fingerprint = localStorage.getItem(configChatbot.key);\n\n  if (!fingerprint) {\n    Fingerprint2.get(function (components) {\n      fingerprint = Fingerprint2.x64hash128(components.map(function (pair) {\n        return pair.value;\n      }).join(), 31);\n      localStorage.setItem(configChatbot.key, fingerprint);\n    });\n  }\n\n  document.querySelector(configChatbot.btn).onclick = function (e) {\n    this.classList.add('d-none');\n    const $tooltip = this.querySelector('.chatbot__tooltip');\n\n    if ($tooltip) {\n      $tooltip.classList.add('d-none');\n    }\n\n    configChatbot.root.classList.toggle('chatbot_hidden');\n\n    if (chatbot) {\n      return;\n    }\n\n    const request = new XMLHttpRequest();\n    request.open('GET', configChatbot.replicas, true);\n    request.responseType = 'json';\n\n    request.onload = function () {\n      const status = request.status;\n\n      if (status === 200) {\n        const data = request.response;\n\n        if (typeof data === 'string') {\n          configChatbot.replicas = JSON.parse(data);\n        } else {\n          configChatbot.replicas = data;\n        }\n\n        chatbot = new SimpleChatbot(configChatbot);\n        chatbot.init();\n      } else {\n        console.log(status, request.response);\n      }\n    };\n\n    request.send();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chatbot__btn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatbot__tooltip d-none\",\n        children: \"\\u0415\\u0441\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fingerprint2","SimpleChatbot","App","configChatbot","btn","key","replicas","root","createTemplate","url","chatbot","fingerprint","localStorage","getItem","get","components","x64hash128","map","pair","value","join","setItem","document","querySelector","onclick","e","classList","add","$tooltip","toggle","request","XMLHttpRequest","open","responseType","onload","status","data","response","JSON","parse","init","console","log","send"],"sources":["C:/Users/EGOR/Desktop/Work_system/работа/проекты/hk_iro_server/front-hk-iro/src/Test.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport \"../SimpleChatbot-1.3.2/chatbot/chatbot.css\"\r\nimport \"../SimpleChatbot-1.3.2/chatbot/fp2\"\r\nimport \"../SimpleChatbot-1.3.2/chatbot/chatbot\"\r\n\r\nimport Fingerprint2 from \"../SimpleChatbot-1.3.2/chatbot/fp2\"\r\nimport SimpleChatbot from \"../SimpleChatbot-1.3.2/chatbot/chatbot\"\r\n\r\nfunction App (){\r\n    const configChatbot = {};\r\n    configChatbot.btn = '.chatbot__btn';\r\n    configChatbot.key = 'fingerprint';\r\n    configChatbot.replicas = '/data/data-1.json';\r\n    configChatbot.root = SimpleChatbot.createTemplate();\r\n    configChatbot.url = '/chatbot/chatbot.php';\r\n    let chatbot = null;\r\n    let fingerprint = localStorage.getItem(configChatbot.key);\r\n    if (!fingerprint) {\r\n    Fingerprint2.get(function (components) {\r\n        fingerprint = Fingerprint2.x64hash128(components.map(function (pair) {\r\n        return pair.value\r\n        }).join(), 31)\r\n        localStorage.setItem(configChatbot.key, fingerprint)\r\n    });\r\n    }\r\n    document.querySelector(configChatbot.btn).onclick = function (e) {\r\n    this.classList.add('d-none');\r\n    const $tooltip = this.querySelector('.chatbot__tooltip');\r\n    if ($tooltip) {\r\n        $tooltip.classList.add('d-none');\r\n    }\r\n    configChatbot.root.classList.toggle('chatbot_hidden');\r\n    if (chatbot) {\r\n        return;\r\n    }\r\n    const request = new XMLHttpRequest();\r\n    request.open('GET', configChatbot.replicas, true);\r\n    request.responseType = 'json';\r\n    request.onload = function () {\r\n        const status = request.status;\r\n        if (status === 200) {\r\n        const data = request.response;\r\n        if (typeof data === 'string') {\r\n            configChatbot.replicas = JSON.parse(data);\r\n        } else {\r\n            configChatbot.replicas = data;\r\n        }\r\n        chatbot = new SimpleChatbot(configChatbot);\r\n        chatbot.init();\r\n        } else {\r\n        console.log(status, request.response);\r\n        }\r\n    };\r\n    request.send();\r\n    };\r\n    return (\r\n        <div className=\"App\">\r\n            <div class=\"chatbot__btn\">\r\n                <div class=\"chatbot__tooltip d-none\">Есть вопрос?</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,4CAAP;AACA,OAAO,oCAAP;AACA,OAAO,wCAAP;AAEA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;;AAEA,SAASC,GAAT,GAAe;EACX,MAAMC,aAAa,GAAG,EAAtB;EACAA,aAAa,CAACC,GAAd,GAAoB,eAApB;EACAD,aAAa,CAACE,GAAd,GAAoB,aAApB;EACAF,aAAa,CAACG,QAAd,GAAyB,mBAAzB;EACAH,aAAa,CAACI,IAAd,GAAqBN,aAAa,CAACO,cAAd,EAArB;EACAL,aAAa,CAACM,GAAd,GAAoB,sBAApB;EACA,IAAIC,OAAO,GAAG,IAAd;EACA,IAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBV,aAAa,CAACE,GAAnC,CAAlB;;EACA,IAAI,CAACM,WAAL,EAAkB;IAClBX,YAAY,CAACc,GAAb,CAAiB,UAAUC,UAAV,EAAsB;MACnCJ,WAAW,GAAGX,YAAY,CAACgB,UAAb,CAAwBD,UAAU,CAACE,GAAX,CAAe,UAAUC,IAAV,EAAgB;QACrE,OAAOA,IAAI,CAACC,KAAZ;MACC,CAFqC,EAEnCC,IAFmC,EAAxB,EAEH,EAFG,CAAd;MAGAR,YAAY,CAACS,OAAb,CAAqBlB,aAAa,CAACE,GAAnC,EAAwCM,WAAxC;IACH,CALD;EAMC;;EACDW,QAAQ,CAACC,aAAT,CAAuBpB,aAAa,CAACC,GAArC,EAA0CoB,OAA1C,GAAoD,UAAUC,CAAV,EAAa;IACjE,KAAKC,SAAL,CAAeC,GAAf,CAAmB,QAAnB;IACA,MAAMC,QAAQ,GAAG,KAAKL,aAAL,CAAmB,mBAAnB,CAAjB;;IACA,IAAIK,QAAJ,EAAc;MACVA,QAAQ,CAACF,SAAT,CAAmBC,GAAnB,CAAuB,QAAvB;IACH;;IACDxB,aAAa,CAACI,IAAd,CAAmBmB,SAAnB,CAA6BG,MAA7B,CAAoC,gBAApC;;IACA,IAAInB,OAAJ,EAAa;MACT;IACH;;IACD,MAAMoB,OAAO,GAAG,IAAIC,cAAJ,EAAhB;IACAD,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB7B,aAAa,CAACG,QAAlC,EAA4C,IAA5C;IACAwB,OAAO,CAACG,YAAR,GAAuB,MAAvB;;IACAH,OAAO,CAACI,MAAR,GAAiB,YAAY;MACzB,MAAMC,MAAM,GAAGL,OAAO,CAACK,MAAvB;;MACA,IAAIA,MAAM,KAAK,GAAf,EAAoB;QACpB,MAAMC,IAAI,GAAGN,OAAO,CAACO,QAArB;;QACA,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;UAC1BjC,aAAa,CAACG,QAAd,GAAyBgC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAzB;QACH,CAFD,MAEO;UACHjC,aAAa,CAACG,QAAd,GAAyB8B,IAAzB;QACH;;QACD1B,OAAO,GAAG,IAAIT,aAAJ,CAAkBE,aAAlB,CAAV;QACAO,OAAO,CAAC8B,IAAR;MACC,CATD,MASO;QACPC,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAAoBL,OAAO,CAACO,QAA5B;MACC;IACJ,CAdD;;IAeAP,OAAO,CAACa,IAAR;EACC,CA7BD;;EA8BA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MAAK,KAAK,EAAC,cAAX;MAAA,uBACI;QAAK,KAAK,EAAC,yBAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;KAtDQzC,G;AAsDR;AAED,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}