{"ast":null,"code":"// полифилл для matches\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n} // полифилл для closest\n\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    let el = this;\n\n    do {\n      if (Element.prototype.matches.call(el, s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\nfunction getDateTime() {\n  const now = new Date();\n  return now.toLocaleString() + 'GMT ' + (-now.getTimezoneOffset() < 0 ? '-' : '+') + Math.abs(now.getTimezoneOffset() / 60);\n}\n/*\n  btn - селектор для выбора кнопки\n  key - ключ для хранения отпечатка браузера\n  replicas - реплики чат-бота\n  root - корневой элемент\n  url - URL chatbot.php\n*/\n\n\nfunction SimpleChatbot(config) {\n  if (config['root']) {\n    this._$root = config['root'];\n  } else {\n    throw 'SimpleChatbot: ключ root должен присутствовать в передаваемых данных';\n  }\n\n  if (config['replicas']) {\n    this._replicas = config['replicas'];\n  } else {\n    throw 'SimpleChatbot: ключ replicas должен присутствовать в передаваемых данных';\n  }\n\n  this._url = config['url'] ? config['url'] : '/chatbot/chatbot.php';\n  this._key = config['key'] ? config['key'] : 'fingerprint';\n  this._delay = 500; // индекс текущей реплики bot\n\n  this._botIndex = 0;\n  this._contentIndex = 1;\n  this._start = true; // переменные чат-бота\n\n  this._params = {};\n  this._active = false;\n\n  this._addEventListener();\n}\n\n; // init\n\nSimpleChatbot.prototype.init = function () {\n  if (this._active) {\n    return;\n  }\n\n  this._active = true;\n  const replicasJson = localStorage.getItem('chatbot');\n\n  if (replicasJson) {\n    const replicas = JSON.parse(replicasJson); // получим переменные чат-бота из LocalStorage\n\n    this._params = replicas.params; // установим индекс текущей реплики бота\n\n    this._botIndex = replicas.botIndex; // формируем html из реплик LocalStorage\n\n    let html = [];\n    let i = 0;\n\n    while (i < replicas.data.length) {\n      html.push(SimpleChatbot.templateItem(replicas.data[i]));\n      i++;\n    }\n\n    var $container = this._$root.querySelector('.chatbot__items');\n\n    $container.insertAdjacentHTML('beforeend', html.join(''));\n\n    this._outputContent(0);\n  } else {\n    this._outputContent(this._delay);\n  }\n};\n\nSimpleChatbot.prototype.reset = function () {\n  SimpleChatbot.resetTemplate();\n  this._botIndex = 0;\n  this._contentIndex = 1;\n  this._start = true;\n  this._params = {};\n  this._active = false;\n  localStorage.removeItem('chatbot');\n  this.init();\n}; // общий шаблон\n\n\nSimpleChatbot.prototype._template = function (type, content, state) {\n  var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return '<div class=\"chatbot__item chatbot__item_'.concat(type, '\"><div class=\"chatbot__content chatbot__content_').concat(type, state, '\">', content, '</div></div>');\n}; // шаблон кнопки\n\n\nSimpleChatbot.prototype._templateBtn = function (botIndex, content) {\n  return '<button class=\"btn\" type=\"button\" data-bot-index=\"' + botIndex + '\">' + content + '</button>';\n}; // получить данные\n\n\nSimpleChatbot.prototype._getData = function (target, id) {\n  var chatObj = this._replicas[target];\n  return chatObj[id.toString()];\n}; // вывод контента\n\n\nSimpleChatbot.prototype._outputContent = function (interval) {\n  var botData = this._getData('bot', this._botIndex);\n\n  var humanIds = botData.human;\n\n  var $container = this._$root.querySelector('.chatbot__items');\n\n  var botContent = botData.content;\n\n  if (Array.isArray(botContent)) {\n    botContent = botContent.slice();\n\n    for (var i = 0, length = botContent.length; i < length; i++) {\n      if (botContent[i].indexOf('{{') !== -1) {\n        for (let key in this._params) {\n          botContent[i] = botContent[i].split('{{'.concat(key, '}}')).join(this._params[key]);\n        }\n      }\n    }\n  } else {\n    if (botContent.indexOf('{{') !== -1) {\n      for (var key in this._params) {\n        botContent = botContent.split('{{'.concat(key, '}}')).join(this._params[key]);\n      }\n    }\n  }\n\n  var _this = this;\n\n  var fn2 = function () {\n    if (_this._getData('human', humanIds[0]).content === '') {\n      _this._$root.querySelector('.chatbot__input').disabled = false;\n      _this._$root.querySelector('.chatbot__input').dataset.name = _this._getData('human', humanIds[0]).name;\n      _this._$root.querySelector('.chatbot__submit').disabled = true;\n\n      _this._$root.querySelector('.chatbot__input').focus();\n\n      _this._$root.querySelector('.chatbot__submit').dataset.botIndex = _this._getData('human', humanIds[0]).bot;\n    } else {\n      _this._$root.querySelector('.chatbot__input').value = '';\n      _this._$root.querySelector('.chatbot__input').disabled = true;\n      _this._$root.querySelector('.chatbot__submit').disabled = true;\n      var $humanContent = humanIds.map(function (id) {\n        var humanData = _this._getData('human', id);\n\n        return _this._templateBtn(humanData.bot, humanData.content);\n      });\n\n      var $humanContentWrapper = _this._template('human', $humanContent.join(''));\n\n      $container.insertAdjacentHTML('beforeend', $humanContentWrapper);\n      $container.scrollTop = $container.scrollHeight;\n    }\n  };\n\n  if (interval) {\n    var times = 1;\n\n    if (Array.isArray(botContent)) {\n      for (var i = 0, length = botContent.length; i < length; i++) {\n        const $botContent = this._template('bot', botContent[i]);\n\n        window.setTimeout(function () {\n          $container.insertAdjacentHTML('beforeend', $botContent);\n          $container.scrollTop = $container.scrollHeight;\n        }, interval * times);\n        times++;\n      }\n    } else {\n      const $botContent = this._template('bot', botContent);\n\n      window.setTimeout(function () {\n        $container.insertAdjacentHTML('beforeend', $botContent);\n        $container.scrollTop = $container.scrollHeight;\n      }, interval * times);\n      times++;\n    }\n\n    window.setTimeout(function () {\n      fn2();\n    }, interval * times);\n  } else {\n    if (Array.isArray(botContent)) {\n      for (var i = 0, length = botContent.length; i < length; i++) {\n        const $botContent = this._template('bot', botContent[i]);\n\n        $container.insertAdjacentHTML('beforeend', $botContent);\n        $container.scrollTop = $container.scrollHeight;\n      }\n    } else {\n      const $botContent = this._template('bot', botContent);\n\n      $container.insertAdjacentHTML('beforeend', $botContent);\n      $container.scrollTop = $container.scrollHeight;\n    }\n\n    fn2();\n  }\n}; // перевод ответа пользователя в неактивный\n\n\nSimpleChatbot.prototype._humanResponseToDisabled = function ($target) {\n  var $container = $target.closest('.chatbot__content_human');\n  var content = $target.innerHTML;\n  $container.innerHTML = content;\n  $container.classList.remove('chatbot__content_human');\n  $container.classList.add('chatbot__content_human-disabled');\n  return content;\n};\n\nSimpleChatbot.prototype._addToChatHumanResponse = function (humanContent) {\n  var $container = this._$root.querySelector('.chatbot__items');\n\n  var $humanContent = this._template('human', humanContent, '-disabled');\n\n  $container.insertAdjacentHTML('beforeend', $humanContent);\n  $container.scrollTop = $container.scrollHeight;\n}; // функция для обработки события click\n\n\nSimpleChatbot.prototype._eventHandlerClick = function (e) {\n  var $target = e.target;\n  var botIndex = $target.dataset.botIndex;\n  var url = this._url;\n  var data = {};\n  var humanContent = '';\n  var humanField = '';\n\n  if ($target.closest('.chatbot__submit')) {\n    if ($target.closest('.chatbot__submit').disabled) {\n      return;\n    }\n\n    $target.closest('.chatbot__submit').disabled = true;\n\n    if (!this._$root.querySelector('.chatbot__input').value.length) {\n      return;\n    }\n\n    this._botIndex = +$target.closest('.chatbot__submit').dataset.botIndex;\n    humanContent = this._$root.querySelector('.chatbot__input').value;\n    humanField = this._$root.querySelector('.chatbot__input').dataset.name;\n\n    if (humanField) {\n      this._params[humanField] = humanContent;\n    }\n\n    this._addToChatHumanResponse(humanContent);\n\n    this._outputContent(this._delay);\n  } else if (botIndex) {\n    this._botIndex = +botIndex; // переводим ответ пользователя в неактивный\n\n    humanContent = this._humanResponseToDisabled($target); // выводим следующий контент\n\n    this._outputContent(this._delay);\n  } else if ($target.classList.contains('chatbot__close')) {\n    $target.closest('.chatbot').classList.add('chatbot_hidden');\n    document.querySelector('.chatbot__btn').classList.remove('d-none');\n    return;\n  } else if ($target.classList.contains('chatbot__reset')) {\n    this.reset();\n    return;\n  } else {\n    return;\n  }\n\n  e.preventDefault(); // получаем последние сообщения бота\n\n  var _this = this;\n\n  var $botWrapper = document.querySelectorAll('.chatbot__item_bot');\n  var $botWrapperLast = $botWrapper[$botWrapper.length - 1];\n  var $prev = $botWrapperLast;\n  var $first = $prev;\n\n  while ($prev) {\n    if (!$prev.classList.contains('chatbot__item_bot')) {\n      break;\n    }\n\n    $first = $prev;\n    $prev = $prev.previousElementSibling;\n  }\n\n  var $botContent = $first;\n\n  while ($botContent) {\n    if (!$botContent.classList.contains('chatbot__item_bot')) {\n      break;\n    }\n\n    var $botItems = $botContent.querySelectorAll('.chatbot__content');\n\n    for (var i = 0, length = $botItems.length; i < length; i++) {\n      data[_this._contentIndex] = {\n        type: 'bot',\n        content: $botItems[i].innerHTML\n      };\n      _this._contentIndex++;\n    }\n\n    $botContent = $botContent.nextElementSibling;\n  }\n\n  data[this._contentIndex] = {\n    type: 'human',\n    content: humanContent\n  };\n  this._contentIndex++;\n  var fromStorage = localStorage.getItem('chatbot');\n  var dataToStorage = [];\n  var paramsJSON = {};\n\n  if (fromStorage) {\n    dataToStorage = JSON.parse(fromStorage).data;\n    paramsJSON = JSON.parse(fromStorage).params;\n  }\n\n  for (var key in data) {\n    dataToStorage.push({\n      type: data[key].type,\n      content: data[key].content\n    });\n  }\n\n  if (humanField) {\n    paramsJSON[humanField] = humanContent;\n  }\n\n  var dataToStorageJSON = JSON.stringify({\n    botIndex: this._botIndex,\n    data: dataToStorage,\n    params: paramsJSON\n  });\n  localStorage.setItem('chatbot', dataToStorageJSON); // данные для отправки\n\n  var dataSend = JSON.stringify({\n    id: localStorage.getItem(this._key),\n    chat: data,\n    start: this._start,\n    date: getDateTime()\n  });\n  this._start = false; // отправляем данные на сервер\n\n  var request = new XMLHttpRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 0 || request.readyState === 4) {\n      if (request.status == 200) {//console.log(JSON.parse(request.responseText));\n      } else {//console.log('error');\n      }\n    }\n  };\n\n  request.open('POST', url);\n  request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.send(dataSend);\n}; // функция для обработки события change\n\n\nSimpleChatbot.prototype._eventHandlerKeydown = function (e) {\n  var $target = e.target;\n\n  if (!$target.classList.contains('chatbot__input')) {\n    return;\n  }\n\n  var btnSubmit = this._$root.querySelector('.chatbot__submit');\n\n  if ($target.value.length > 0) {\n    btnSubmit.disabled = false;\n  } else {\n    btnSubmit.disabled = true;\n  }\n}; // подключение обработчиков событий\n\n\nSimpleChatbot.prototype._addEventListener = function () {\n  this._$root.addEventListener('click', this._eventHandlerClick.bind(this));\n\n  this._$root.addEventListener('input', this._eventHandlerKeydown.bind(this));\n\n  this._$root.addEventListener('keypress', function (e) {\n    if (e.key === 'Enter' && e.target.classList.contains('chatbot__input')) {\n      var $submit = e.target.closest('.chatbot').querySelector('.chatbot__submit');\n      $submit.click();\n    }\n  });\n}; // шаблон chatbot__item\n\n\nSimpleChatbot.templateItem = function (replicas) {\n  let html = '<div class=\"chatbot__item chatbot__item_{{type}}\"><div class=\"chatbot__content chatbot__content_{{type}}{{state}}\">{{content}}</div></div>';\n  html = html.replace('{{type}}', replicas.type);\n  html = html.replace('{{type}}', replicas.type);\n  html = html.replace('{{state}}', replicas.type === 'bot' ? '' : '-disabled');\n  html = html.replace('{{content}}', replicas.content);\n  return html;\n}; // сброс основного шаблона\n\n\nSimpleChatbot.resetTemplate = function () {\n  let $root = document.querySelector('.chatbot');\n\n  if (!$root) {\n    return;\n  }\n\n  $root.innerHTML = '<div class=\"chatbot__title\"><span class=\"chatbot__close\"></span>Chatbot<span class=\"chatbot__reset\"></span></div><div class=\"chatbot__wrapper\"><div class=\"chatbot__items\"></div></div><div class=\"chatbot__footer\"><input class=\"chatbot__input\" type=\"text\" disabled><button class=\"chatbot__submit\" type=\"button\" disabled></button></div>';\n}; // основной шаблон чат-бота\n\n\nSimpleChatbot.createTemplate = function () {\n  let $root = document.querySelector('.chatbot');\n\n  if ($root) {\n    return $root;\n  }\n\n  const $fragment = document.createElement('div');\n  $fragment.className = 'chatbot chatbot_hidden';\n  $fragment.innerHTML = '<div class=\"chatbot__title\"><span class=\"chatbot__close\"></span>Chatbot<span class=\"chatbot__reset\"></span></div><div class=\"chatbot__wrapper\"><div class=\"chatbot__items\"></div></div><div class=\"chatbot__footer\"><input class=\"chatbot__input\" type=\"text\" disabled><button class=\"chatbot__submit\" type=\"button\" disabled></button></div>';\n  document.body.appendChild($fragment);\n  return document.querySelector('.chatbot');\n};","map":{"version":3,"names":["Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","call","parentElement","parentNode","nodeType","getDateTime","now","Date","toLocaleString","getTimezoneOffset","Math","abs","SimpleChatbot","config","_$root","_replicas","_url","_key","_delay","_botIndex","_contentIndex","_start","_params","_active","_addEventListener","init","replicasJson","localStorage","getItem","replicas","JSON","parse","params","botIndex","html","i","data","length","push","templateItem","$container","querySelector","insertAdjacentHTML","join","_outputContent","reset","resetTemplate","removeItem","_template","type","content","state","arguments","undefined","concat","_templateBtn","_getData","target","id","chatObj","toString","interval","botData","humanIds","human","botContent","Array","isArray","slice","indexOf","key","split","_this","fn2","disabled","dataset","name","focus","bot","value","$humanContent","map","humanData","$humanContentWrapper","scrollTop","scrollHeight","times","$botContent","window","setTimeout","_humanResponseToDisabled","$target","innerHTML","classList","remove","add","_addToChatHumanResponse","humanContent","_eventHandlerClick","e","url","humanField","contains","document","preventDefault","$botWrapper","querySelectorAll","$botWrapperLast","$prev","$first","previousElementSibling","$botItems","nextElementSibling","fromStorage","dataToStorage","paramsJSON","dataToStorageJSON","stringify","setItem","dataSend","chat","start","date","request","XMLHttpRequest","onreadystatechange","readyState","status","open","setRequestHeader","send","_eventHandlerKeydown","btnSubmit","addEventListener","bind","$submit","click","replace","$root","createTemplate","$fragment","createElement","className","body","appendChild"],"sources":["C:/Users/EGOR/Desktop/Work_system/работа/проекты/hk_iro_server/front-hk-iro/node_modules/SimpleChatbot-1.3.2/chatbot/chatbot.js"],"sourcesContent":["// полифилл для matches\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n// полифилл для closest\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function(s) {\n    let el = this;\n    do {\n      if (Element.prototype.matches.call(el, s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nfunction getDateTime() {\n  const now = new Date();\n  return now.toLocaleString() + 'GMT ' + (-now.getTimezoneOffset() < 0 ? '-' : '+') + Math.abs(now.getTimezoneOffset() / 60);\n}\n\n/*\n  btn - селектор для выбора кнопки\n  key - ключ для хранения отпечатка браузера\n  replicas - реплики чат-бота\n  root - корневой элемент\n  url - URL chatbot.php\n*/\nfunction SimpleChatbot(config) {\n  if (config['root']) {\n    this._$root = config['root'];\n  } else {\n    throw 'SimpleChatbot: ключ root должен присутствовать в передаваемых данных';\n  }\n  if (config['replicas']) {\n    this._replicas = config['replicas'];\n  } else {\n    throw 'SimpleChatbot: ключ replicas должен присутствовать в передаваемых данных';\n  }\n  this._url = config['url'] ? config['url'] : '/chatbot/chatbot.php';\n  this._key = config['key'] ? config['key'] : 'fingerprint';\n  this._delay = 500;\n  // индекс текущей реплики bot\n  this._botIndex = 0;\n\n  this._contentIndex = 1;\n  this._start = true;\n  // переменные чат-бота\n  this._params = {};\n  this._active = false;\n  this._addEventListener();\n};\n\n\n// init\nSimpleChatbot.prototype.init = function () {\n  if (this._active) {\n    return;\n  }\n  this._active = true;\n  const replicasJson = localStorage.getItem('chatbot');\n  if (replicasJson) {\n    const replicas = JSON.parse(replicasJson);\n    // получим переменные чат-бота из LocalStorage\n    this._params = replicas.params;\n    // установим индекс текущей реплики бота\n    this._botIndex = replicas.botIndex;\n    // формируем html из реплик LocalStorage\n    let html = [];\n    let i = 0;\n    while (i < replicas.data.length) {\n      html.push(SimpleChatbot.templateItem(replicas.data[i]));\n      i++;\n    }\n    var $container = this._$root.querySelector('.chatbot__items');\n    $container.insertAdjacentHTML('beforeend', html.join(''));\n\n    this._outputContent(0);\n  } else {\n    this._outputContent(this._delay);\n  }\n}\n\nSimpleChatbot.prototype.reset = function() {\n  SimpleChatbot.resetTemplate();\n  this._botIndex = 0;\n  this._contentIndex = 1;\n  this._start = true;\n  this._params = {};\n  this._active = false;\n  localStorage.removeItem('chatbot');\n  this.init();\n}\n\n// общий шаблон\nSimpleChatbot.prototype._template = function (type, content, state) {\n  var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return '<div class=\"chatbot__item chatbot__item_'\n    .concat(type, '\"><div class=\"chatbot__content chatbot__content_')\n    .concat(type, state, '\">', content, '</div></div>');\n};\n\n// шаблон кнопки\nSimpleChatbot.prototype._templateBtn = function (botIndex, content) {\n  return '<button class=\"btn\" type=\"button\" data-bot-index=\"' + botIndex + '\">' + content + '</button>';\n};\n\n// получить данные\nSimpleChatbot.prototype._getData = function (target, id) {\n  var chatObj = this._replicas[target];\n  return chatObj[id.toString()];\n};\n\n// вывод контента\nSimpleChatbot.prototype._outputContent = function (interval) {\n  var botData = this._getData('bot', this._botIndex);\n  var humanIds = botData.human;\n  var $container = this._$root.querySelector('.chatbot__items');\n  var botContent = botData.content;\n  if (Array.isArray(botContent)) {\n    botContent = botContent.slice();\n    for (var i = 0, length = botContent.length; i < length; i++) {\n      if (botContent[i].indexOf('{{') !== -1) {\n        for (let key in this._params) {\n          botContent[i] = botContent[i].split('{{'.concat(key, '}}')).join(this._params[key]);\n        }\n      }\n    }\n  } else {\n    if (botContent.indexOf('{{') !== -1) {\n      for (var key in this._params) {\n        botContent = botContent.split('{{'.concat(key, '}}')).join(this._params[key]);\n      }\n    }\n  }\n  var _this = this;\n  var fn2 = function () {\n    if (_this._getData('human', humanIds[0]).content === '') {\n      _this._$root.querySelector('.chatbot__input').disabled = false;\n      _this._$root.querySelector('.chatbot__input').dataset.name = _this._getData(\n        'human',\n        humanIds[0]\n      ).name;\n      _this._$root.querySelector('.chatbot__submit').disabled = true;\n      _this._$root.querySelector('.chatbot__input').focus();\n      _this._$root.querySelector('.chatbot__submit').dataset.botIndex = _this._getData(\n        'human',\n        humanIds[0]\n      ).bot;\n    } else {\n      _this._$root.querySelector('.chatbot__input').value = '';\n      _this._$root.querySelector('.chatbot__input').disabled = true;\n      _this._$root.querySelector('.chatbot__submit').disabled = true;\n      var $humanContent = humanIds.map(function (id) {\n        var humanData = _this._getData('human', id);\n        return _this._templateBtn(humanData.bot, humanData.content);\n      });\n      var $humanContentWrapper = _this._template('human', $humanContent.join(''));\n      $container.insertAdjacentHTML('beforeend', $humanContentWrapper);\n      $container.scrollTop = $container.scrollHeight;\n    }\n  };\n  if (interval) {\n    var times = 1;\n    if (Array.isArray(botContent)) {\n      for (var i = 0, length = botContent.length; i < length; i++) {\n        const $botContent = this._template('bot', botContent[i]);\n        window.setTimeout(function() {\n          $container.insertAdjacentHTML('beforeend', $botContent);\n          $container.scrollTop = $container.scrollHeight;\n        }, interval * times);\n        times++;\n      }\n    } else {\n      const $botContent = this._template('bot', botContent);\n      window.setTimeout(function() {\n        $container.insertAdjacentHTML('beforeend', $botContent);\n        $container.scrollTop = $container.scrollHeight;\n      }, interval * times);\n      times++;\n    }\n    window.setTimeout(function() {\n      fn2();\n    }, interval * times);\n  } else {\n    if (Array.isArray(botContent)) {\n      for (var i = 0, length = botContent.length; i < length; i++) {\n        const $botContent = this._template('bot', botContent[i]);\n        $container.insertAdjacentHTML('beforeend', $botContent);\n        $container.scrollTop = $container.scrollHeight;\n      }\n    } else {\n      const $botContent = this._template('bot', botContent);\n      $container.insertAdjacentHTML('beforeend', $botContent);\n      $container.scrollTop = $container.scrollHeight;\n    }\n    fn2();\n  }\n};\n\n// перевод ответа пользователя в неактивный\nSimpleChatbot.prototype._humanResponseToDisabled = function ($target) {\n  var $container = $target.closest('.chatbot__content_human');\n  var content = $target.innerHTML;\n  $container.innerHTML = content;\n  $container.classList.remove('chatbot__content_human');\n  $container.classList.add('chatbot__content_human-disabled');\n  return content;\n};\n\nSimpleChatbot.prototype._addToChatHumanResponse = function (humanContent) {\n  var $container = this._$root.querySelector('.chatbot__items');\n  var $humanContent = this._template('human', humanContent, '-disabled');\n  $container.insertAdjacentHTML('beforeend', $humanContent);\n  $container.scrollTop = $container.scrollHeight;\n};\n\n// функция для обработки события click\nSimpleChatbot.prototype._eventHandlerClick = function (e) {\n  var $target = e.target;\n  var botIndex = $target.dataset.botIndex;\n  var url = this._url;\n  var data = {};\n  var humanContent = '';\n  var humanField = '';\n  if ($target.closest('.chatbot__submit')) {\n    if ($target.closest('.chatbot__submit').disabled) {\n      return;\n    }\n    $target.closest('.chatbot__submit').disabled = true;\n    if (!this._$root.querySelector('.chatbot__input').value.length) {\n      return;\n    }\n    this._botIndex = +$target.closest('.chatbot__submit').dataset.botIndex;\n    humanContent = this._$root.querySelector('.chatbot__input').value;\n    humanField = this._$root.querySelector('.chatbot__input').dataset.name;\n    if (humanField) {\n      this._params[humanField] = humanContent;\n    }\n    this._addToChatHumanResponse(humanContent);\n    this._outputContent(this._delay);\n  } else if (botIndex) {\n    this._botIndex = +botIndex;\n    // переводим ответ пользователя в неактивный\n    humanContent = this._humanResponseToDisabled($target);\n    // выводим следующий контент\n    this._outputContent(this._delay);\n  } else if ($target.classList.contains('chatbot__close')) {\n    $target.closest('.chatbot').classList.add('chatbot_hidden');\n    document.querySelector('.chatbot__btn').classList.remove('d-none');\n    return;\n  } else if ($target.classList.contains('chatbot__reset')) {\n    this.reset();\n    return;\n  } else {\n    return;\n  }\n  e.preventDefault();\n  // получаем последние сообщения бота\n  var _this = this;\n  var $botWrapper = document.querySelectorAll('.chatbot__item_bot');\n  var $botWrapperLast = $botWrapper[$botWrapper.length - 1];\n  var $prev = $botWrapperLast;\n  var $first = $prev;\n  while ($prev) {\n    if (!$prev.classList.contains('chatbot__item_bot')) {\n      break;\n    }\n    $first = $prev;\n    $prev = $prev.previousElementSibling;\n  }\n  var $botContent = $first;\n  while ($botContent) {\n    if (!$botContent.classList.contains('chatbot__item_bot')) {\n      break;\n    }\n    var $botItems = $botContent.querySelectorAll('.chatbot__content');\n    for (var i = 0, length = $botItems.length; i < length; i++) {\n      data[_this._contentIndex] = {\n        type: 'bot',\n        content: $botItems[i].innerHTML,\n      };\n      _this._contentIndex++;\n    }\n    $botContent = $botContent.nextElementSibling;\n  }\n  data[this._contentIndex] = {\n    type: 'human',\n    content: humanContent,\n  };\n  this._contentIndex++;\n\n  var fromStorage = localStorage.getItem('chatbot');\n  var dataToStorage = [];\n  var paramsJSON = {};\n  if (fromStorage) {\n    dataToStorage = JSON.parse(fromStorage).data;\n    paramsJSON = JSON.parse(fromStorage).params;\n  }\n  for (var key in data) {\n    dataToStorage.push({\n      type: data[key].type,\n      content: data[key].content,\n    });\n  }\n  if (humanField) {\n    paramsJSON[humanField] = humanContent;\n  }\n  var dataToStorageJSON = JSON.stringify({\n    botIndex: this._botIndex,\n    data: dataToStorage,\n    params: paramsJSON,\n  });\n  localStorage.setItem('chatbot', dataToStorageJSON);\n\n  // данные для отправки\n  var dataSend = JSON.stringify({\n    id: localStorage.getItem(this._key),\n    chat: data,\n    start: this._start,\n    date: getDateTime(),\n  });\n\n  this._start = false;\n\n  // отправляем данные на сервер\n  var request = new XMLHttpRequest();\n  request.onreadystatechange = function () {\n    if (request.readyState === 0 || request.readyState === 4) {\n      if (request.status == 200) {\n        //console.log(JSON.parse(request.responseText));\n      } else {\n        //console.log('error');\n      }\n    }\n  };\n  request.open('POST', url);\n  request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.send(dataSend);\n};\n\n// функция для обработки события change\nSimpleChatbot.prototype._eventHandlerKeydown = function (e) {\n  var $target = e.target;\n  if (!$target.classList.contains('chatbot__input')) {\n    return;\n  }\n  var btnSubmit = this._$root.querySelector('.chatbot__submit');\n  if ($target.value.length > 0) {\n    btnSubmit.disabled = false;\n  } else {\n    btnSubmit.disabled = true;\n  }\n};\n\n// подключение обработчиков событий\nSimpleChatbot.prototype._addEventListener = function () {\n  this._$root.addEventListener('click', this._eventHandlerClick.bind(this));\n  this._$root.addEventListener('input', this._eventHandlerKeydown.bind(this));\n  this._$root.addEventListener('keypress', function(e) {\n    if (e.key === 'Enter' && e.target.classList.contains('chatbot__input')) {\n      var $submit = e.target.closest('.chatbot').querySelector('.chatbot__submit');\n      $submit.click();\n    }\n  });\n};\n\n\n\n// шаблон chatbot__item\nSimpleChatbot.templateItem = function (replicas) {\n  let html = '<div class=\"chatbot__item chatbot__item_{{type}}\"><div class=\"chatbot__content chatbot__content_{{type}}{{state}}\">{{content}}</div></div>';\n  html = html.replace('{{type}}', replicas.type);\n  html = html.replace('{{type}}', replicas.type);\n  html = html.replace('{{state}}', replicas.type === 'bot' ? '' : '-disabled');\n  html = html.replace('{{content}}', replicas.content);\n  return html;\n};\n\n// сброс основного шаблона\nSimpleChatbot.resetTemplate = function() {\n  let $root = document.querySelector('.chatbot');\n  if (!$root) {\n    return;\n  }\n  $root.innerHTML = '<div class=\"chatbot__title\"><span class=\"chatbot__close\"></span>Chatbot<span class=\"chatbot__reset\"></span></div><div class=\"chatbot__wrapper\"><div class=\"chatbot__items\"></div></div><div class=\"chatbot__footer\"><input class=\"chatbot__input\" type=\"text\" disabled><button class=\"chatbot__submit\" type=\"button\" disabled></button></div>';\n};\n\n// основной шаблон чат-бота\nSimpleChatbot.createTemplate = function() {\n  let $root = document.querySelector('.chatbot');\n  if ($root) {\n    return $root;\n  }\n  const $fragment = document.createElement('div');\n  $fragment.className = 'chatbot chatbot_hidden';\n  $fragment.innerHTML = '<div class=\"chatbot__title\"><span class=\"chatbot__close\"></span>Chatbot<span class=\"chatbot__reset\"></span></div><div class=\"chatbot__wrapper\"><div class=\"chatbot__items\"></div></div><div class=\"chatbot__footer\"><input class=\"chatbot__input\" type=\"text\" disabled><button class=\"chatbot__submit\" type=\"button\" disabled></button></div>';\n  document.body.appendChild($fragment);\n  return document.querySelector('.chatbot');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}